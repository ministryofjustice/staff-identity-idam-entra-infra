name: "[Workflow] Pull Request"

on:
  pull_request:

permissions:
  contents: read
  id-token: write
  security-events: write
  pull-requests: write

defaults:
  run:
    shell: bash

jobs:
  terraform:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [DEVL, NLE, LIVE, NLEEXTERNAL]

    environment: ${{ matrix.environment }}

    env:
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      Env: ${{ matrix.environment }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Azure Login via OIDC
        uses: azure/login@v2
        with:
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          client-id: ${{ secrets.ARM_CLIENT_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Build Terraform Runner
        run: go build -o tf-runner ./scripts/pipeline/main.go

      - name: Terraform Init
        run: ./tf-runner -env "${{ matrix.environment }}" -cmd "init -backend-config=./state.config"

      - name: Terraform Validate
        run: ./tf-runner -env "${{ matrix.environment }}" -cmd "validate"

      - name: Terraform Format
        run: ./tf-runner -env "${{ matrix.environment }}" -cmd "fmt"

      - name: Terraform Plan
        run: ./tf-runner -env "${{ matrix.environment }}" -cmd "plan -lock-timeout=300s -input=false"
