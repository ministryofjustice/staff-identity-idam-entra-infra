name: "[Workflow] Pull Request Testing"

on:
  push:
    branches:
      - 'IDAM-4098-change-workflow-script-feature'

permissions:
  contents: read
  id-token: write
  security-events: write
  pull-requests: write

defaults:
  run:
    shell: bash

jobs:
  terraform:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [DEVL, NLE, LIVE, NLEEXTERNAL, PRODEXTERNAL]

    environment: ${{ matrix.environment }}

    env:
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      Env: ${{ matrix.environment }}

    steps:
    
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Azure Login via OIDC
      uses: azure/login@v2
      with:
        subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        tenant-id: ${{ secrets.ARM_TENANT_ID }}
        client-id: ${{ secrets.ARM_CLIENT_ID }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Diff Test
      shell: pwsh 
      run: |
        $diff = git diff --name-only HEAD^ HEAD
        write-Host "The diff is [$diff]"

    - name: Terraform Init
      shell: pwsh
      run: scripts/pipeline/Get-Changes.ps1 -Env "${{matrix.environment }}" -TerraformCommand "init -backend-config='./state.config'"

    - name: Terraform Validate
      shell: pwsh
      run: scripts/pipeline/Get-Changes.ps1 -Env "${{matrix.environment }}" -TerraformCommand "validate"

    - name: Terraform Format
      shell: pwsh
      run: scripts/pipeline/Get-Changes.ps1 -Env "${{matrix.environment }}" -TerraformCommand "fmt"

    - name: Terraform Plan
      shell: pwsh
      run: scripts/pipeline/Get-Changes.ps1 -Env "${{matrix.environment }}" -TerraformCommand "plan -lock-timeout=300s -input=false"

    - name: Terraform Plan and Apply
      shell: pwsh
      run: scripts/pipeline/Get-Changes.ps1 -Env "${{matrix.environment }}" -TerraformPlanAndApply
      continue-on-error: true

    - name: Show Terraform Logs
      if: failure()
      run: cat terraform.log
