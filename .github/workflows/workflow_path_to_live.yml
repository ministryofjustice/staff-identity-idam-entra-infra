name: "[Workflow] Path To Live"

on:
  push:
    branches:
      - main
    paths:
      - terraform/**
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  security-events: write
  pull-requests: write
  issues: write

defaults:
  run:
    shell: bash

env:
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}

jobs:
    terraform:
      runs-on: ubuntu-latest

      strategy:
        matrix:
          include:
            - environment: DEVL
              working_directory: ./terraform/envs/devl
            - environment: NLE
              working_directory: ./terraform/envs/nle
            - environment: LIVE
              working_directory: ./terraform/envs/live

      environment: ${{ matrix.environment }}

      steps:

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Azure Login via OIDC
        uses: azure/login@v2
        with:
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          client-id: ${{ secrets.ARM_CLIENT_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: ${{ matrix.working_directory }}
        run: terraform init -backend-config="./state.config"

      - name: Terraform Validate
        working-directory: ${{ matrix.working_directory }}
        run: terraform validate

      - name: Terraform Format
        working-directory: ${{ matrix.working_directory }}
        run: terraform fmt

      - name: Terraform Plan
        working-directory: ${{ matrix.working_directory }}
        run: terraform plan -lock-timeout=300s -input=false -out=terraform-plan.tfplan

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-${{ matrix.environment }}
          path: ${{ matrix.working_directory }}/terraform-plan.tfplan
          retention-days: 0

    manual_approval:
      name: Manual Approval
      runs-on: ubuntu-latest
      needs: terraform
      if: success() # Only proceed if terraform job succeeds

      steps:
        - name: Await Manual Approval
          uses: trstringer/manual-approval@v1
          with:
            secret: ${{ github.TOKEN }}
            approvers: MikeT-MoJ, jasegillettmoj, johnnolan
            minimum-approvals: 1
            issue-title: "Manual Approval Required for Terraform Apply"
            issue-body: "Please approve or deny the deployment."


    terraform_apply:
      name: Terraform Apply
      needs: manual_approval
      runs-on: ubuntu-latest
      strategy:
        matrix:
          include:
            - environment: DEVL
              working_directory: ./terraform/envs/devl
            - environment: NLE
              working_directory: ./terraform/envs/nle
            - environment: LIVE
              working_directory: ./terraform/envs/live

      environment: ${{ matrix.environment }}

      steps:
        - name: Checkout Code
          uses: actions/checkout@v4

        - name: Azure Login via OIDC
          uses: azure/login@v2
          with:
            subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
            tenant-id: ${{ secrets.ARM_TENANT_ID }}
            client-id: ${{ secrets.ARM_CLIENT_ID }}

        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v3

        - name: Download Terraform Plan
          uses: actions/download-artifact@v4
          with:
            name: terraform-plan-${{ matrix.environment }}
            path: ${{ matrix.working_directory }}


        - name: Terraform Init
          working-directory: ${{ matrix.working_directory }}
          run: terraform init -backend-config="./state.config"

        - name: Terraform Validate
          working-directory: ${{ matrix.working_directory }}
          run: terraform validate

        - name: Terraform Format
          working-directory: ${{ matrix.working_directory }}
          run: terraform fmt

        - name: Terraform Apply
          working-directory: ${{ matrix.working_directory }}
          run: terraform apply -lock-timeout=300s -input=false -auto-approve -parallelism=30 terraform-plan.tfplan
