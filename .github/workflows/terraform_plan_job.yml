name: "[Job] Azure Terraform Plan"

on:
  workflow_call:
    inputs:
      workspace_name:
        description: 'The terraform workspace to target for environment actions'
        required: true
        type: string
    secrets:
      arm_client_id:
        description: 'Azure ARM Client ID'
        required: true
      arm_client_secret:
        description: 'Azure ARM Client Secret'
        required: true
      arm_tenant_id:
        description: 'ARM Tenant ID'
        required: true
      arm_subscription_id:
        description: 'ARM Subscription ID'
        required: true
      workspace_client_id:
        description: 'Azure ARM Client ID for TF Workspace'
        required: true
      workspace_client_secret:
        description: 'Azure ARM Client Secret for TF Workspace'
        required: true
      workspace_tenant_id:
        description: 'ARM Tenant ID for TF Workspace'
        required: true
      github_access_token:
        description: 'Github Token'
        required: true

permissions:
  pull-requests: write
  issues: write
  id-token: write
  contents: read

jobs:
  terraform_plan_workflow:
    environment: ${{ inputs.workspace_name }}
    name: "${{ inputs.workspace_name }} plan"
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.arm_client_id }}
      ARM_CLIENT_SECRET: ${{ secrets.arm_client_secret }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.arm_subscription_id }}
      ARM_TENANT_ID: ${{ secrets.arm_tenant_id }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Check formatting
        id: terraform_fmt
        run: terraform fmt -check -recursive
        working-directory: ./terraform
        continue-on-error: true
        
      - name: Terraform Init
        id: terraform_init
        run: terraform init -input=false
        env:
          TF_WORKSPACE: ${{ inputs.workspace_name }}
          TF_VAR_tenant_id: ${{ secrets.workspace_tenant_id }}
          TF_VAR_client_id: ${{ secrets.workspace_client_id }}
          TF_VAR_client_secret: ${{ secrets.workspace_client_secret }}
        working-directory: ./terraform

      - name: Terraform Validate
        id: terraform_validate
        run: terraform validate
        env:
          TF_WORKSPACE: ${{ inputs.workspace_name }}
          TF_VAR_tenant_id: ${{ secrets.workspace_tenant_id }}
          TF_VAR_client_id: ${{ secrets.workspace_client_id }}
          TF_VAR_client_secret: ${{ secrets.workspace_client_secret }}
        working-directory: ./terraform

      - name: Terraform Plan
        id: terraform_plan
        env:
          TF_WORKSPACE: ${{ inputs.workspace_name }}
          TF_VAR_tenant_id: ${{ secrets.workspace_tenant_id }}
          TF_VAR_client_id: ${{ secrets.workspace_client_id }}
          TF_VAR_client_secret: ${{ secrets.workspace_client_secret }}
        run: |
          terraform plan -lock-timeout=300s -input=false
        working-directory: ./terraform

      - name: Update Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.github_access_token }}
          script: |
            const output = `#### Terraform Format and Style <img draggable="false" role="img" class="emoji" alt="ðŸ–Œ" src="https://s.w.org/images/core/emoji/15.0.3/svg/1f58c.svg">\`${{ steps.terraform_fmt.outcome }}\`
            #### Terraform Initialization <img draggable="false" role="img" class="emoji" alt="ðŸ¤–" src="https://s.w.org/images/core/emoji/15.0.3/svg/1f916.svg">\`${{ steps.terraform_init.outcome }}\`
            #### Terraform Validation <img draggable="false" role="img" class="emoji" alt="ðŸ¤–" src="https://s.w.org/images/core/emoji/15.0.3/svg/1f916.svg">\`${{ steps.terraform_validate.outcome }}\`
            #### Terraform Plan <img draggable="false" role="img" class="emoji" alt="ðŸ“–" src="https://s.w.org/images/core/emoji/15.0.3/svg/1f4d6.svg">\`${{ steps.terraform_plan.outcome }}\`
            <details><summary>Show Plan</summary>
      
            \`\`\`\n
            ${{ steps.terraform_plan.outputs.stdout }}
            \`\`\`
      
            </details>
      
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
      
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
